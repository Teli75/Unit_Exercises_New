{"ast":null,"code":"var _jsxFileName = \"/Users/ehernandez12/Documents/TechDegree/Unit_Exercises/Unit_7/data-fetching-in-react/START-HERE/gif-search/src/Components/GifList.js\";\nimport React from 'react';\nimport Gif from './Gif';\nimport NoGifs from \"./NoGifs\";\n\n/* Contains the wrapping ul element that will display our list of gifs via \nthe gif component */\n//Received data from app and is responsible for how it looks\n//props are how components talk to each other\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GifList = props => {\n  const results = props.data;\n  let gifs;\n  if (results.length > 0) {\n    gifs = results.map(gif => /*#__PURE__*/_jsxDEV(Gif, {\n      url: gif.images.fixed_height.url\n    }, gif.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }, this));\n  } else {\n    gifs = /*#__PURE__*/_jsxDEV(NoGifs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  //we can use the map method to map over the array and return a gif component for each object in the array. The function takes the parameter gif and returns a gif component\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"gif-list\",\n    children: gifs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = GifList;\nexport default GifList;\nvar _c;\n$RefreshReg$(_c, \"GifList\");","map":{"version":3,"names":["React","Gif","NoGifs","jsxDEV","_jsxDEV","GifList","props","results","data","gifs","length","map","gif","url","images","fixed_height","id","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/Users/ehernandez12/Documents/TechDegree/Unit_Exercises/Unit_7/data-fetching-in-react/START-HERE/gif-search/src/Components/GifList.js"],"sourcesContent":["import React from 'react';\nimport Gif from './Gif';\nimport NoGifs from \"./NoGifs\";\n\n/* Contains the wrapping ul element that will display our list of gifs via \nthe gif component */\n//Received data from app and is responsible for how it looks\n//props are how components talk to each other\nconst GifList = props => { \n  const results = props.data;\n\n  let gifs;\n  if (results.length > 0 ) {\n    gifs = results.map( gif => \n  <Gif \n    url={gif.images.fixed_height.url}\n    key={gif.id}\n  />)\n  } else {\n    gifs = <NoGifs />\n  }\n  //we can use the map method to map over the array and return a gif component for each object in the array. The function takes the parameter gif and returns a gif component\n  \n  \n\n  \n  return(\n    <ul className=\"gif-list\">\n      {/* why not just use the map method in the return?  */}\n      {gifs}\n    </ul> \n  );\n}\n\nexport default GifList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGC,KAAK,IAAI;EACvB,MAAMC,OAAO,GAAGD,KAAK,CAACE,IAAI;EAE1B,IAAIC,IAAI;EACR,IAAIF,OAAO,CAACG,MAAM,GAAG,CAAC,EAAG;IACvBD,IAAI,GAAGF,OAAO,CAACI,GAAG,CAAEC,GAAG,iBACzBR,OAAA,CAACH,GAAG;MACFY,GAAG,EAAED,GAAG,CAACE,MAAM,CAACC,YAAY,CAACF;IAAI,GAC5BD,GAAG,CAACI,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,CAAC;EACH,CAAC,MAAM;IACLX,IAAI,gBAAGL,OAAA,CAACF,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnB;EACA;;EAKA,oBACEhB,OAAA;IAAIiB,SAAS,EAAC,UAAU;IAAAC,QAAA,EAErBb;EAAI;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAET,CAAC;AAAAG,EAAA,GAxBKlB,OAAO;AA0Bb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}