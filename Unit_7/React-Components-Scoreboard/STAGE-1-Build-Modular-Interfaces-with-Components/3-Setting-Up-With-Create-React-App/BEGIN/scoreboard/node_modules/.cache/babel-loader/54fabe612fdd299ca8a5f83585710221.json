{"ast":null,"code":"var _jsxFileName = \"/Users/ehernandez12/Documents/TechDegree/Unit_Exercises/Unit_7/React-Components/STAGE-1-Build-Modular-Interfaces-with-Components/3-Setting-Up-With-Create-React-App/BEGIN/scoreboard/src/components/AddPlayerForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPlayerForm = props => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const playerInput = useRef();\n\n  const handleSubmit = event => {\n    /*browser posts a req back to server which causes app to reload in browser,\n    we would lose all our app state in the process, that's why we use preventDef */\n    event.preventDefault();\n    props.addPlayer(value);\n    setValue(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => handleSubmit(event),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: value,\n      placeholder: \"Enter a player's name\"\n      /* the event object provides a target property which points\n      to the underlying input element in the dom. We can read the\n      value from it and use it to update our state */\n      ,\n      onChange: event => setValue(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Add Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddPlayerForm, \"T9xxk7IW5PAnc2Kg+nDn4Z355pM=\");\n\n_c = AddPlayerForm;\nexport default AddPlayerForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlayerForm\");","map":{"version":3,"names":["React","useState","useRef","AddPlayerForm","props","value","setValue","playerInput","handleSubmit","event","preventDefault","addPlayer","target"],"sources":["/Users/ehernandez12/Documents/TechDegree/Unit_Exercises/Unit_7/React-Components/STAGE-1-Build-Modular-Interfaces-with-Components/3-Setting-Up-With-Create-React-App/BEGIN/scoreboard/src/components/AddPlayerForm.js"],"sourcesContent":["import React, {useState, useRef } from \"react\";\n\n\nconst AddPlayerForm = (props) => {\n    const [value, setValue] = useState(\"\");\n    const playerInput = useRef();\n\n    const handleSubmit = (event) => {\n        /*browser posts a req back to server which causes app to reload in browser,\n        we would lose all our app state in the process, that's why we use preventDef */\n        event.preventDefault();\n        props.addPlayer(value);\n        setValue(\"\");\n    }\n\n    return (\n        <form onSubmit= {(event) => handleSubmit(event)}>\n            <input \n                type= \"text\"\n                value= {value}\n                placeholder=\"Enter a player's name\"\n                /* the event object provides a target property which points\n                to the underlying input element in the dom. We can read the\n                value from it and use it to update our state */\n                onChange={(event) => setValue(event.target.value) }\n            />\n            <input\n            type=\"submit\"\n            value=\"Add Player\"\n            />\n        </form>\n    )\n}\n\nexport default AddPlayerForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAuC,OAAvC;;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAMM,WAAW,GAAGL,MAAM,EAA1B;;EAEA,MAAMM,YAAY,GAAIC,KAAD,IAAW;IAC5B;AACR;IACQA,KAAK,CAACC,cAAN;IACAN,KAAK,CAACO,SAAN,CAAgBN,KAAhB;IACAC,QAAQ,CAAC,EAAD,CAAR;EACH,CAND;;EAQA,oBACI;IAAM,QAAQ,EAAIG,KAAD,IAAWD,YAAY,CAACC,KAAD,CAAxC;IAAA,wBACI;MACI,IAAI,EAAE,MADV;MAEI,KAAK,EAAGJ,KAFZ;MAGI,WAAW,EAAC;MACZ;AAChB;AACA;MANY;MAOI,QAAQ,EAAGI,KAAD,IAAWH,QAAQ,CAACG,KAAK,CAACG,MAAN,CAAaP,KAAd;IAPjC;MAAA;MAAA;MAAA;IAAA,QADJ,eAUI;MACA,IAAI,EAAC,QADL;MAEA,KAAK,EAAC;IAFN;MAAA;MAAA;MAAA;IAAA,QAVJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH,CA7BD;;GAAMF,a;;KAAAA,a;AA+BN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}